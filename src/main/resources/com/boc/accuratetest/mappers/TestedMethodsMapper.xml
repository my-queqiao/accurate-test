<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boc.accuratetest.mappers.TestedMethodsMapper">
  <resultMap id="BaseResultMap" type="com.boc.accuratetest.pojo.TestedMethods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="package_name" jdbcType="VARCHAR" property="packageName" />
    <result column="javabean_name" jdbcType="VARCHAR" property="javabeanName" />
    <result column="method_name" jdbcType="VARCHAR" property="methodName" />
    <result column="param_type" jdbcType="VARCHAR" property="paramType" />
    <result column="call_time" jdbcType="VARCHAR" property="callTime" />
    <result column="call_time_long" jdbcType="BIGINT" property="callTimeLong" />
    <result column="production_task_number" jdbcType="VARCHAR" property="productionTaskNumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, package_name, javabean_name, method_name, param_type, call_time, call_time_long, 
    production_task_number
  </sql>
  <select id="selectByExample" parameterType="com.boc.accuratetest.pojo.TestedMethodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tested_methods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tested_methods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tested_methods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.boc.accuratetest.pojo.TestedMethodsExample">
    delete from tested_methods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.boc.accuratetest.pojo.TestedMethods">
    insert into tested_methods (id, package_name, javabean_name, 
      method_name, param_type, call_time, 
      call_time_long, production_task_number)
    values (#{id,jdbcType=INTEGER}, #{packageName,jdbcType=VARCHAR}, #{javabeanName,jdbcType=VARCHAR}, 
      #{methodName,jdbcType=VARCHAR}, #{paramType,jdbcType=VARCHAR}, #{callTime,jdbcType=VARCHAR}, 
      #{callTimeLong,jdbcType=BIGINT}, #{productionTaskNumber,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.boc.accuratetest.pojo.TestedMethods">
    insert into tested_methods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="packageName != null">
        package_name,
      </if>
      <if test="javabeanName != null">
        javabean_name,
      </if>
      <if test="methodName != null">
        method_name,
      </if>
      <if test="paramType != null">
        param_type,
      </if>
      <if test="callTime != null">
        call_time,
      </if>
      <if test="callTimeLong != null">
        call_time_long,
      </if>
      <if test="productionTaskNumber != null">
        production_task_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="packageName != null">
        #{packageName,jdbcType=VARCHAR},
      </if>
      <if test="javabeanName != null">
        #{javabeanName,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="paramType != null">
        #{paramType,jdbcType=VARCHAR},
      </if>
      <if test="callTime != null">
        #{callTime,jdbcType=VARCHAR},
      </if>
      <if test="callTimeLong != null">
        #{callTimeLong,jdbcType=BIGINT},
      </if>
      <if test="productionTaskNumber != null">
        #{productionTaskNumber,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.boc.accuratetest.pojo.TestedMethodsExample" resultType="java.lang.Long">
    select count(*) from tested_methods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tested_methods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.packageName != null">
        package_name = #{record.packageName,jdbcType=VARCHAR},
      </if>
      <if test="record.javabeanName != null">
        javabean_name = #{record.javabeanName,jdbcType=VARCHAR},
      </if>
      <if test="record.methodName != null">
        method_name = #{record.methodName,jdbcType=VARCHAR},
      </if>
      <if test="record.paramType != null">
        param_type = #{record.paramType,jdbcType=VARCHAR},
      </if>
      <if test="record.callTime != null">
        call_time = #{record.callTime,jdbcType=VARCHAR},
      </if>
      <if test="record.callTimeLong != null">
        call_time_long = #{record.callTimeLong,jdbcType=BIGINT},
      </if>
      <if test="record.productionTaskNumber != null">
        production_task_number = #{record.productionTaskNumber,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tested_methods
    set id = #{record.id,jdbcType=INTEGER},
      package_name = #{record.packageName,jdbcType=VARCHAR},
      javabean_name = #{record.javabeanName,jdbcType=VARCHAR},
      method_name = #{record.methodName,jdbcType=VARCHAR},
      param_type = #{record.paramType,jdbcType=VARCHAR},
      call_time = #{record.callTime,jdbcType=VARCHAR},
      call_time_long = #{record.callTimeLong,jdbcType=BIGINT},
      production_task_number = #{record.productionTaskNumber,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.boc.accuratetest.pojo.TestedMethods">
    update tested_methods
    <set>
      <if test="packageName != null">
        package_name = #{packageName,jdbcType=VARCHAR},
      </if>
      <if test="javabeanName != null">
        javabean_name = #{javabeanName,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        method_name = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="paramType != null">
        param_type = #{paramType,jdbcType=VARCHAR},
      </if>
      <if test="callTime != null">
        call_time = #{callTime,jdbcType=VARCHAR},
      </if>
      <if test="callTimeLong != null">
        call_time_long = #{callTimeLong,jdbcType=BIGINT},
      </if>
      <if test="productionTaskNumber != null">
        production_task_number = #{productionTaskNumber,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.boc.accuratetest.pojo.TestedMethods">
    update tested_methods
    set package_name = #{packageName,jdbcType=VARCHAR},
      javabean_name = #{javabeanName,jdbcType=VARCHAR},
      method_name = #{methodName,jdbcType=VARCHAR},
      param_type = #{paramType,jdbcType=VARCHAR},
      call_time = #{callTime,jdbcType=VARCHAR},
      call_time_long = #{callTimeLong,jdbcType=BIGINT},
      production_task_number = #{productionTaskNumber,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
 
  
  <insert id="insertBatchForTestedMethods" parameterType="java.util.List">
    insert into tested_methods (package_name, javabean_name, method_name, param_type,
    	call_time, call_time_long,production_task_number)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
	    (#{item.packageName,jdbcType=VARCHAR}, #{item.javabeanName,jdbcType=VARCHAR}, 
      #{item.methodName,jdbcType=VARCHAR}, #{item.paramType,jdbcType=VARCHAR}, #{item.callTime,jdbcType=VARCHAR}, 
      #{item.callTimeLong,jdbcType=BIGINT},#{item.productionTaskNumber,jdbcType=VARCHAR})
    </foreach>
  </insert>
  
  <select id="getAll" resultMap="BaseResultMap">
    select DISTINCT package_name,javabean_name,method_name,param_type
    from tested_methods 
  </select>
  <update id="updateChangeCodeTestingOrNot">
    UPDATE change_code c,tested_methods t  SET c.testing_or_not = 1
		WHERE c.package_name = t.package_name
			and c.javabean_name = t.javabean_name
			and c.method_name = t.method_name
			and c.param_type = t.param_type
			and c.production_task_number = t.production_task_number
			and t.production_task_number = #{productionTaskNumber,jdbcType=VARCHAR}
	;
  </update>
</mapper>